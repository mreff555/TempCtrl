make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.4.1
# Built for x86_64-apple-darwin23.0.0
# Copyright (C) 1988-2023 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Wed Dec 25 14:53:30 2024

# Variables

# environment
LC_ALL = C
# environment
VSCEXT_EXHORT_SKOPEO_PATH = skopeo
# makefile (from 'Makefile', line 1)
PROJECT_NAME = tempctrl
# environment
 
TMPDIR = /var/folders/sh/g_44cq854lsb9r49w2616kh40000gn/T/
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.118817947.118817953
# makefile (from 'Makefile', line 12)
DOCKER_DEPS_IMAGE_BUILD_FLAGS = --no-cache=true
# makefile (from 'Makefile', line 7)
DOCKER_DEPS_IMAGE = ${PROJECT_NAME}_build
# environment
VSCODE_CRASH_REPORTER_PROCESS_TYPE = extensionHost
# environment
VSCODE_CWD = /
# environment
VSCEXT_EXHORT_IMAGE_PLATFORM = 
# makefile (from 'Makefile', line 38)
IF_CONTAINER_RUNS = $(shell docker container inspect -f '{{.State.Running}}' ${DOCKER_DEPS_CONTAINER} 2>/dev/null)
# environment
VSCEXT_EXHORT_GRADLE_PATH = gradle
# environment
VSCEXT_TRACK_RECOMMENDATION_ACCEPTANCE_COMMAND = rhda.trackRecommendationAcceptance
# default
MAKE_COMMAND := make
# environment
APPLICATIONINSIGHTS_CONFIGURATION_CONTENT = {}
# makefile (from 'Makefile', line 20)
LOCAL_SOURCE_PATH = ${CURDIR}
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
VSCEXT_EXHORT_SYFT_CONFIG_PATH = 
# environment
VSCEXT_EXHORT_PIP_PATH = pip
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
COMMAND_MODE = unix2003
# environment
PWD = /Users/mreff555/src/TempCtrl
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
VSCEXT_EXHORT_MVN_PATH = mvn
# automatic
^D = $(patsubst %/,%,$(dir $^))
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /Users/mreff555/Library/Application Support/Code/CachedData/f1a4fb101478ce6ec82fe9627c43efbf9e98c813
# environment
LANG = C
# makefile (from 'Makefile', line 9)
DOCKER_DEPS_CONTAINER = ${DOCKER_DEPS_IMAGE}
# default
.LOADED := 
# default
.INCLUDE_DIRS := /usr/local/Cellar/make/4.4.1/include /usr/local/include
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /Users/mreff555/src/TempCtrl
# environment
VSCEXT_EXHORT_GO_PATH = go
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
VSCODE_L10N_BUNDLE_LOCATION = 
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 21)
DOCKER_SOURCE_PATH = /root/project_root
# makefile (from 'Makefile', line 22)
DOCKER_BUILD_DIR = build
# environment
VSCEXT_EXHORT_PYTHON_PATH = python
# makefile (from 'Makefile', line 23)
DOCKER_CTEST_TIMEOUT = 5000
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.gS3ZKM3ZvH/Listeners
# default
.SHELLFLAGS := -c
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# environment
VSCEXT_EXHORT_PODMAN_PATH = podman
# automatic
@F = $(notdir $@)
# environment
VSCODE_PID = 3756
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
VSCEXT_EXHORT_PIP3_PATH = pip3
# makefile (from 'Makefile', line 8)
DOCKER_DEPS_VERSION = latest
# environment
MallocNanoZone = 0
# automatic
*F = $(notdir $*)
# environment
VSCEXT_EXHORT_SYFT_PATH = syft
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"userLocale":"en-us","osLocale":"en-us","resolvedLanguage":"en","defaultMessagesFile":"/Applications/Visual Studio Code.app/Contents/Resources/app/out/nls.messages.json","locale":"en-us","availableLanguages":{}}
# default
MAKE_HOST := x86_64-apple-darwin23.0.0
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 10)
DOCKER_DEPS_FILE = Dockerfile
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/opt/X11/bin:/Library/Apple/usr/bin:/Library/TeX/texbin:/Applications/Wireshark.app/Contents/MacOS:/Applications/VMware Fusion.app/Contents/Public
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 14)
DOCKER_PREPEND_MAKEFILES = 
# environment
VSCEXT_USE_PIP_DEP_TREE = false
# environment
VSCEXT_TELEMETRY_ID = 1a7b920b-7852-4a78-b114-cd0d1976bd22
# makefile (from 'Makefile', line 17)
DOCKER_CMAKE_FLAGS = 
# environment
VSCEXT_EXHORT_DOCKER_PATH = docker
# environment
VSCEXT_STACK_ANALYSIS_COMMAND = rhda.stackAnalysis
# automatic
?F = $(notdir $?)
# environment
VSCEXT_EXHORT_NPM_PATH = npm
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile', line 15)
DOCKER_APPEND_MAKEFILES = 
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = mreff555
# environment
VSCEXT_EXHORT_SKOPEO_CONFIG_PATH = 
# environment
XPC_FLAGS = 0x0
# environment
VSCEXT_USE_PYTHON_VIRTUAL_ENVIRONMENT = false
 
# makefile (from 'Makefile', line 3)
DOCKER_CC = gcc
# environment
VSCEXT_MATCH_MANIFEST_VERSIONS = true
# makefile (from 'Makefile', line 40)
.DEFAULT_GOAL := build
# environment
VSCEXT_VULNERABILITY_ALERT_SEVERITY = Error
# environment
DISPLAY = /private/tmp/com.apple.launchd.WssPtXWvCx/org.xquartz:0
# environment
USER = mreff555
# default
MAKE_VERSION := 4.4.1
# environment
VSCEXT_UTM_SOURCE = vscode
# environment
_ = /usr/local/bin/make
# environment
VSCEXT_EXHORT_PYTHON3_PATH = python3
# makefile (from 'Makefile', line 29)
DOCKER_BASIC_RUN_PARAMS = -it --init --rm --memory-swap=-1 --ulimit core=-1 --name="${DOCKER_DEPS_CONTAINER}" --workdir=${DOCKER_SOURCE_PATH} --mount type=bind,source=${LOCAL_SOURCE_PATH},target=${DOCKER_SOURCE_PATH} ${DOCKER_ADDITIONAL_RUN_PARAMS} ${DOCKER_DEPS_REPO}${DOCKER_DEPS_IMAGE}:${DOCKER_DEPS_VERSION}
# environment
VSCEXT_ENABLE_PYTHON_BEST_EFFORTS_INSTALLATION = false
# environment
HOME = /Users/mreff555
# makefile (from 'Makefile', line 27)
DOCKER_ADDITIONAL_RUN_PARAMS = 
# makefile (from 'Makefile', line 19)
DOCKER_SHELL = bash
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /Users/mreff555/Library/Application Support/Code/1.95-main.sock
# makefile (from 'Makefile', line 6)
DOCKER_DEPS_REPO = ${PROJECT_NAME}/
# environment
VSCEXT_USE_GO_MVS = false
# makefile (from 'Makefile', line 25)
DOCKER_TEST_CORE_DIR = ${DOCKER_BUILD_DIR}/cores
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 4)
DOCKER_CXX = g++
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs notintermediate shell-export archives jobserver jobserver-fifo output-sync check-symlink load
# environment
VSCODE_ESM_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# variable set hash-table stats:
# Load=112/1024=11%, Rehash=0, Collisions=20/162=12%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777221, inode 43970546): 16 files, no impossibilities.

# 16 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  File is secondary (prerequisite of .SECONDARY).
#  Last modified 2024-12-25 14:51:08.407537934
#  File has been updated.
#  Successfully updated.

build-docker-deps-image:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 97):
	docker build ${DOCKER_DEPS_IMAGE_BUILD_FLAGS} -t ${DOCKER_DEPS_REPO}${DOCKER_DEPS_IMAGE}:latest \
		-f ./${DOCKER_DEPS_FILE} .
	@echo
	@echo "Build finished. Docker image name: \"${DOCKER_DEPS_REPO}${DOCKER_DEPS_IMAGE}:latest\"."
	@echo "Before you push it to Docker Hub, please tag it(DOCKER_DEPS_VERSION + 1)."
	@echo "If you want the image to be the default, please update the following variables:"
	@echo "${CURDIR}/Makefile: DOCKER_DEPS_VERSION"

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 81):
	docker run ${DOCKER_BASIC_RUN_PARAMS} \
		${DOCKER_SHELL} -c \
		"rm -rf ${DOCKER_BUILD_DIR}"

gen_cmake:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 51):
	docker run ${DOCKER_BASIC_RUN_PARAMS} \
		${DOCKER_SHELL} -c \
		"mkdir -p ${DOCKER_SOURCE_PATH}/${DOCKER_BUILD_DIR} && \
		cd ${DOCKER_BUILD_DIR} && \
		CC=${DOCKER_CC} CXX=${DOCKER_CXX} \
		cmake ${DOCKER_CMAKE_FLAGS} .."
	@echo
	@echo "CMake finished."

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 46):
	@cat $(MAKEFILE_LIST) | grep -E '^[a-zA-Z_-]+:.*?## .*$$' | \
		awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

build: gen_cmake
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 62):
	docker run ${DOCKER_BASIC_RUN_PARAMS} \
		${DOCKER_SHELL} -c \
		"cd ${DOCKER_BUILD_DIR} && \
		rm -f CMakeCache.txt && \
		cmake .. && \
		make -j $$(nproc) ${TARGET}"
	@echo
	@echo "Build finished. The binaries are in ${CURDIR}/${DOCKER_BUILD_DIR}"

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 73):
	docker run ${DOCKER_BASIC_RUN_PARAMS} \
		${DOCKER_SHELL} -c \
		"mkdir -p ${DOCKER_TEST_CORE_DIR} && \
		cd ${DOCKER_BUILD_DIR} && \
		ctest --timeout ${DOCKER_CTEST_TIMEOUT} --output-on-failure"

login:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 87):
	@if [ "${IF_CONTAINER_RUNS}" != "true" ]; then \
		docker run ${DOCKER_BASIC_RUN_PARAMS} \
			${DOCKER_SHELL}; \
	else \
		docker exec -it ${DOCKER_DEPS_CONTAINER} \
			${DOCKER_SHELL}; \
	fi

.PHONY: help gen_cmake build test clean login build-docker-deps-image
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=12/1024=1%, Rehash=0, Collisions=0/44=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 28 / storage = 270 B / avg = 9 B
# current buf: size = 8162 B / used = 270 B / count = 28 / avg = 9 B

# strcache performance: lookups = 60 / hit rate = 53%
# hash-table stats:
# Load=28/8192=0%, Rehash=0, Collisions=0/60=0%
# Finished Make data base on Wed Dec 25 14:53:30 2024

 
